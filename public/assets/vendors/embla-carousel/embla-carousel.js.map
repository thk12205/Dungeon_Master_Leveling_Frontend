{"version":3,"file":"embla-carousel.js","sources":["src/vanilla/components/alignment.ts","src/vanilla/components/animation.ts","src/vanilla/components/axis.ts","src/vanilla/components/utils.ts","src/vanilla/components/counter.ts","src/vanilla/components/direction.ts","src/vanilla/components/eventStore.ts","src/vanilla/components/vector1d.ts","src/vanilla/components/dragHandler.ts","src/vanilla/components/dragTracker.ts","src/vanilla/components/limit.ts","src/vanilla/components/pxToPercent.ts","src/vanilla/components/scrollBody.ts","src/vanilla/components/scrollBounds.ts","src/vanilla/components/scrollContain.ts","src/vanilla/components/scrollLimit.ts","src/vanilla/components/scrollLooper.ts","src/vanilla/components/scrollProgress.ts","src/vanilla/components/scrollSnap.ts","src/vanilla/components/scrollTarget.ts","src/vanilla/components/scrollTo.ts","src/vanilla/components/slideLooper.ts","src/vanilla/components/slideFocus.ts","src/vanilla/components/slidesInView.ts","src/vanilla/components/translate.ts","src/vanilla/components/engine.ts","src/vanilla/components/eventEmitter.ts","src/vanilla/components/options.ts","src/vanilla/index.ts"],"sourcesContent":["export type AlignmentOption = 'start' | 'center' | 'end' | number\n\ntype Params = {\n  viewSize: number\n  align: AlignmentOption\n}\n\nexport type Alignment = {\n  measure: (n: number) => number\n}\n\nexport function Alignment(params: Params): Alignment {\n  const { viewSize, align } = params\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function percent(): number {\n    return viewSize * Number(align)\n  }\n\n  function measure(n: number): number {\n    if (typeof align === 'number') return percent()\n    return predefined[align](n)\n  }\n\n  const self: Alignment = {\n    measure,\n  }\n  return self\n}\n","type Callback = () => void\n\nexport type Animation = {\n  start: () => void\n  stop: () => void\n  proceed: () => void\n}\n\nexport function Animation(callback: FrameRequestCallback): Animation {\n  let animationFrame = 0\n\n  function ifAnimating(active: boolean, cb: Callback): Callback {\n    return (): void => {\n      if (active === !!animationFrame) cb()\n    }\n  }\n\n  function start(): void {\n    animationFrame = window.requestAnimationFrame(callback)\n  }\n\n  function stop(): void {\n    window.cancelAnimationFrame(animationFrame)\n    animationFrame = 0\n  }\n\n  const self: Animation = {\n    proceed: ifAnimating(true, start),\n    start: ifAnimating(false, start),\n    stop: ifAnimating(true, stop),\n  }\n  return self\n}\n","export type AxisOption = 'x' | 'y'\n\nexport type Axis = {\n  cross: AxisOption\n  scroll: AxisOption\n  measure: (node: HTMLElement) => number\n}\n\nexport function Axis(axis: AxisOption): Axis {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n\n  function measure(node: HTMLElement): number {\n    const { width, height } = node.getBoundingClientRect()\n    return scroll === 'x' ? width : height\n  }\n\n  const self: Axis = {\n    cross,\n    measure,\n    scroll,\n  }\n  return self\n}\n","export function map(\n  value: number,\n  iStart: number,\n  iStop: number,\n  oStart: number,\n  oStop: number,\n): number {\n  return oStart + (oStop - oStart) * ((value - iStart) / (iStop - iStart))\n}\n\nexport function mathSign(n: number): number {\n  return !n ? 0 : n / Math.abs(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return Math.abs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (Math.abs(valueB) <= Math.abs(valueA)) return 0\n  const diff = deltaAbs(Math.abs(valueB), Math.abs(valueA))\n  return Math.abs(diff / valueB)\n}\n\nexport function roundToDecimals(decimalPoints: number): (n: number) => number {\n  const pow = Math.pow(10, decimalPoints)\n  return (n: number): number => Math.round(n * pow) / pow\n}\n\nexport function debounce(callback: () => void, time: number): () => void {\n  let timeout = 0\n  return (): void => {\n    window.clearTimeout(timeout)\n    timeout = window.setTimeout(callback, time) || 0\n  }\n}\n\nexport function groupArray<GenericType>(\n  array: GenericType[],\n  size: number,\n): GenericType[][] {\n  const groups = []\n  for (let i = 0; i < array.length; i += size) {\n    groups.push(array.slice(i, i + size))\n  }\n  return groups\n}\n\nexport function arrayKeys<GenericType>(array: GenericType): number[] {\n  return Object.keys(array).map(Number)\n}\n\nexport function removeClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && cl.contains(className)) cl.remove(className)\n}\n\nexport function addClass(node: HTMLElement, className: string): void {\n  const cl = node.classList\n  if (className && !cl.contains(className)) cl.add(className)\n}\n","import { Limit } from './limit'\nimport { mathSign } from './utils'\n\ntype Params = {\n  start: number\n  limit: Limit\n  loop: boolean\n}\n\nexport type Counter = {\n  min: number\n  max: number\n  get: () => number\n  set: (n: number) => Counter\n  add: (n: number) => Counter\n  clone: () => Counter\n}\n\nexport function Counter(params: Params): Counter {\n  const { start, limit, loop } = params\n  const { min, max } = limit\n  const type = loop ? 'loop' : 'constrain'\n  const withinLimit = limit[type]\n  let counter = withinLimit(start)\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): Counter {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): Counter {\n    if (n !== 0) {\n      const sign = mathSign(n)\n      set(get() + sign)\n      return add(n + sign * -1)\n    }\n    return self\n  }\n\n  function clone(): Counter {\n    return Counter({ start: get(), limit, loop })\n  }\n\n  const self: Counter = {\n    add,\n    clone,\n    get,\n    max,\n    min,\n    set,\n  }\n  return self\n}\n","export type DirectionOption = 'ltr' | 'rtl'\n\nexport type Direction = {\n  applyTo: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOption): Direction {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function applyTo(n: number): number {\n    return n * sign\n  }\n\n  const self: Direction = {\n    applyTo,\n  }\n  return self\n}\n","type EventRemover = () => void\ntype EventHandler = EventListener | EventListenerObject | null\ntype EventOptions = boolean | AddEventListenerOptions | undefined\n\nexport type EventStore = {\n  add: (\n    node: EventTarget,\n    type: string,\n    handler: EventHandler,\n    options?: EventOptions,\n  ) => EventStore\n  removeAll: () => EventStore\n}\n\nexport function EventStore(): EventStore {\n  let listeners: EventRemover[] = []\n\n  function add(\n    node: EventTarget,\n    type: string,\n    handler: EventHandler,\n    options: EventOptions = false,\n  ): EventStore {\n    node.addEventListener(type, handler, options)\n    listeners.push(() => {\n      return node.removeEventListener(type, handler, options)\n    })\n    return self\n  }\n\n  function removeAll(): EventStore {\n    listeners = listeners.filter(remove => remove())\n    return self\n  }\n\n  const self: EventStore = {\n    add,\n    removeAll,\n  }\n  return self\n}\n","export type Vector1D = {\n  get: () => number\n  set: (v: Vector1D | number) => Vector1D\n  add: (v: Vector1D | number) => Vector1D\n  subtract: (v: Vector1D | number) => Vector1D\n  multiply: (n: number) => Vector1D\n  divide: (n: number) => Vector1D\n  normalize: () => Vector1D\n}\n\nexport function Vector1D(value: number): Vector1D {\n  let vector = value\n\n  function get(): number {\n    return vector\n  }\n\n  function set(n: Vector1D | number): Vector1D {\n    vector = readNumber(n)\n    return self\n  }\n\n  function add(n: Vector1D | number): Vector1D {\n    vector += readNumber(n)\n    return self\n  }\n\n  function subtract(n: Vector1D | number): Vector1D {\n    vector -= readNumber(n)\n    return self\n  }\n\n  function multiply(n: number): Vector1D {\n    vector *= n\n    return self\n  }\n\n  function divide(n: number): Vector1D {\n    vector /= n\n    return self\n  }\n\n  function normalize(): Vector1D {\n    if (vector !== 0) divide(vector)\n    return self\n  }\n\n  function readNumber(n: Vector1D | number): number {\n    return typeof n === 'number' ? n : n.get()\n  }\n\n  const self: Vector1D = {\n    add,\n    divide,\n    get,\n    multiply,\n    normalize,\n    set,\n    subtract,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Counter } from './counter'\nimport { Direction } from './direction'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitter } from './eventEmitter'\nimport { Axis } from './axis'\nimport { EventStore } from './eventStore'\nimport { Limit } from './limit'\nimport { ScrollBody } from './scrollBody'\nimport { ScrollTarget } from './scrollTarget'\nimport { ScrollTo } from './scrollTo'\nimport { Vector1D } from './vector1d'\nimport { deltaAbs, factorAbs, mathSign } from './utils'\n\ntype Params = {\n  axis: Axis\n  direction: Direction\n  root: HTMLElement\n  target: Vector1D\n  dragFree: boolean\n  dragTracker: DragTracker\n  location: Vector1D\n  animation: Animation\n  scrollTo: ScrollTo\n  scrollBody: ScrollBody\n  scrollTarget: ScrollTarget\n  index: Counter\n  limit: Limit\n  loop: boolean\n  events: EventEmitter\n}\n\nexport type DragHandler = {\n  addActivationEvents: () => void\n  clickAllowed: () => boolean\n  pointerDown: () => boolean\n  removeAllEvents: () => void\n}\n\nexport function DragHandler(params: Params): DragHandler {\n  const { target, scrollBody, dragFree, animation, axis, scrollTo } = params\n  const { root, dragTracker, location, events, limit, direction } = params\n  const { scroll: scrollAxis, cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const startScroll = Vector1D(0)\n  const startCross = Vector1D(0)\n  const dragStartPoint = Vector1D(0)\n  const activationEvents = EventStore()\n  const interactionEvents = EventStore()\n  const snapForceBoost = { mouse: 2.5, touch: 3.5 }\n  const freeForceBoost = { mouse: 5, touch: 7 }\n  const baseSpeed = dragFree ? 5 : 12\n  const dragThreshold = 4\n\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function addActivationEvents(): void {\n    const node = root\n    activationEvents\n      .add(node, 'touchmove', () => undefined)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', down)\n      .add(node, 'mousedown', down)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click)\n  }\n\n  function addInteractionEvents(): void {\n    const node = !isMouse ? root : document\n    interactionEvents\n      .add(node, 'touchmove', move)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move)\n      .add(node, 'mouseup', up)\n  }\n\n  function removeAllEvents(): void {\n    activationEvents.removeAll()\n    interactionEvents.removeAll()\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const name = node.nodeName || ''\n    return focusNodes.indexOf(name) > -1\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number): number {\n    const { scrollTarget, index } = params\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const seekNext = !targetChanged && Math.abs(force) > dragThreshold\n    const destination = force + location.get()\n\n    if (seekNext && !dragFree && !limit.reachedAny(destination)) {\n      const next = index.clone().add(mathSign(force) * -1)\n      return scrollTarget.byIndex(next.get(), 0).distance\n    }\n    return scrollTarget.byDistance(force, !dragFree).distance\n  }\n\n  function down(evt: Event): void {\n    isMouse = evt.type === 'mousedown'\n    if (isMouse && (evt as MouseEvent).button !== 0) return\n\n    const isMoving = deltaAbs(target.get(), location.get()) >= 2\n    const clearPreventClick = isMouse || !isMoving\n    const isNotFocusNode = !isFocusNode(evt.target as Element)\n    const preventDefault = isMoving || (isMouse && isNotFocusNode)\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    dragStartPoint.set(target)\n    target.set(location)\n    scrollBody.useBaseMass().useSpeed(80)\n    addInteractionEvents()\n    startScroll.set(dragTracker.readPoint(evt, scrollAxis))\n    startCross.set(dragTracker.readPoint(evt, crossAxis))\n    events.emit('pointerDown')\n\n    if (clearPreventClick) preventClick = false\n    if (preventDefault) evt.preventDefault()\n  }\n\n  function move(evt: Event): void {\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up()\n      const moveScroll = dragTracker.readPoint(evt, scrollAxis).get()\n      const moveCross = dragTracker.readPoint(evt, crossAxis).get()\n      const diffScroll = deltaAbs(moveScroll, startScroll.get())\n      const diffCross = deltaAbs(moveCross, startCross.get())\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll && !preventClick) return up()\n    }\n    const diff = dragTracker.pointerMove(evt)\n    const reachedLimit = limit.reachedAny(location.get())\n    const resist = !params.loop && reachedLimit ? 4 : 1\n\n    if (!preventClick && diff) preventClick = true\n    animation.start()\n    target.add(direction.applyTo(diff / resist))\n    evt.preventDefault()\n  }\n\n  function up(): void {\n    const rawForce = dragTracker.pointerUp() * forceBoost()\n    const force = allowedForce(direction.applyTo(rawForce))\n    const speedFactor = factorAbs(rawForce, force)\n    const isMoving = deltaAbs(target.get(), dragStartPoint.get()) >= 0.5\n\n    if (isMoving && !isMouse) preventClick = true\n    preventScroll = false\n    pointerIsDown = false\n    interactionEvents.removeAll()\n    scrollBody.useSpeed(baseSpeed + baseSpeed * speedFactor)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    events.emit('pointerUp')\n  }\n\n  function click(evt: Event): void {\n    if (preventClick) evt.preventDefault()\n  }\n\n  function clickAllowed(): boolean {\n    return !preventClick\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandler = {\n    addActivationEvents,\n    clickAllowed,\n    pointerDown,\n    removeAllEvents,\n  }\n  return self\n}\n","import { Axis, AxisOption } from './axis'\nimport { PxToPercent } from './pxToPercent'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  pxToPercent: PxToPercent\n}\n\nexport type DragTracker = {\n  pointerDown: (evt: Event) => number\n  pointerMove: (evt: Event) => number\n  pointerUp: () => number\n  readPoint: (evt: any, axis: AxisOption) => Vector1D\n}\n\nexport function DragTracker(params: Params): DragTracker {\n  const { axis, pxToPercent } = params\n  const { scroll: scrollAxis } = axis\n  const coords = { x: 'clientX', y: 'clientY' }\n  const startDrag = Vector1D(0)\n  const diffDrag = Vector1D(0)\n  const lastDrag = Vector1D(0)\n  const pointValue = Vector1D(0)\n  const trackInterval = 10\n  const trackLength = 5\n  const trackTime = 100\n  let trackPoints: number[] = []\n  let lastMoveTime = new Date().getTime()\n  let isMouse = false\n\n  function readPoint(evt: any, type: AxisOption): Vector1D {\n    isMouse = !evt.touches\n    const c = coords[type]\n    const value = isMouse ? evt[c] : evt.touches[0][c]\n    return pointValue.set(value)\n  }\n\n  function pointerDown(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    startDrag.set(point)\n    lastDrag.set(point)\n    return pxToPercent.measure(startDrag.get())\n  }\n\n  function pointerMove(evt: Event): number {\n    const point = readPoint(evt, scrollAxis)\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n\n    if (diffTime >= trackInterval) {\n      if (diffTime >= trackTime) trackPoints = []\n      trackPoints.push(point.get())\n      lastMoveTime = nowTime\n    }\n\n    diffDrag.set(point).subtract(lastDrag)\n    lastDrag.set(point)\n    return pxToPercent.measure(diffDrag.get())\n  }\n\n  function pointerUp(): number {\n    const nowTime = new Date().getTime()\n    const diffTime = nowTime - lastMoveTime\n    const currentPoint = lastDrag.get()\n\n    const force = trackPoints\n      .slice(-trackLength)\n      .map(trackPoint => currentPoint - trackPoint)\n      .sort((p1, p2) => (Math.abs(p1) < Math.abs(p2) ? 1 : -1))[0]\n\n    lastDrag.set(diffTime > trackTime || !force ? 0 : force)\n    trackPoints = []\n    return pxToPercent.measure(lastDrag.get())\n  }\n\n  const self: DragTracker = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint,\n  }\n  return self\n}\n","type Params = {\n  min: number\n  max: number\n}\n\nexport type Limit = {\n  min: number\n  max: number\n  length: number\n  loop: (n: number) => number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(params: Params): Limit {\n  const { min, max } = params\n  const length = Math.abs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function removeOffset(n: number): number {\n    if (min === max) return n\n    while (reachedMin(n)) n += length\n    while (reachedMax(n)) n -= length\n    return n\n  }\n\n  function loop(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? max : min\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  const self: Limit = {\n    constrain,\n    length,\n    loop,\n    max,\n    min,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset,\n  }\n  return self\n}\n","export type PxToPercent = {\n  measure: (n: number) => number\n  totalPercent: number\n}\n\nexport function PxToPercent(viewInPx: number): PxToPercent {\n  const totalPercent = 100\n\n  function measure(n: number): number {\n    return (n / viewInPx) * totalPercent\n  }\n\n  const self: PxToPercent = {\n    measure,\n    totalPercent,\n  }\n  return self\n}\n","import { map, roundToDecimals, mathSign } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  location: Vector1D\n  speed: number\n  mass: number\n}\n\nexport type ScrollBody = {\n  direction: () => number\n  seek: (v: Vector1D) => ScrollBody\n  settle: (v: Vector1D) => boolean\n  update: () => void\n  useBaseMass: () => ScrollBody\n  useBaseSpeed: () => ScrollBody\n  useMass: (n: number) => ScrollBody\n  useSpeed: (n: number) => ScrollBody\n}\n\nexport function ScrollBody(params: Params): ScrollBody {\n  const { location, speed: baseSpeed, mass: baseMass } = params\n  const roundToTwoDecimals = roundToDecimals(2)\n  const velocity = Vector1D(0)\n  const acceleration = Vector1D(0)\n  const attraction = Vector1D(0)\n\n  let attractionDirection = 0\n  let speed = baseSpeed\n  let mass = baseMass\n\n  function update(): void {\n    velocity.add(acceleration)\n    location.add(velocity)\n    acceleration.multiply(0)\n  }\n\n  function applyForce(v: Vector1D): void {\n    v.divide(mass)\n    acceleration.add(v)\n  }\n\n  function seek(v: Vector1D): ScrollBody {\n    attraction.set(v).subtract(location)\n    const magnitude = attraction.get()\n    const m = map(magnitude, 0, 100, 0, speed)\n    attractionDirection = mathSign(attraction.get())\n    attraction\n      .normalize()\n      .multiply(m)\n      .subtract(velocity)\n    applyForce(attraction)\n    return self\n  }\n\n  function settle(v: Vector1D): boolean {\n    const diff = v.get() - location.get()\n    const diffRounded = roundToTwoDecimals(diff)\n    const hasSettled = !diffRounded\n    if (hasSettled) location.set(v)\n    return hasSettled\n  }\n\n  function direction(): number {\n    return attractionDirection\n  }\n\n  function useSpeed(n: number): ScrollBody {\n    speed = n\n    return self\n  }\n\n  function useMass(n: number): ScrollBody {\n    mass = n\n    return self\n  }\n\n  function useBaseSpeed(): ScrollBody {\n    return useSpeed(baseSpeed)\n  }\n\n  function useBaseMass(): ScrollBody {\n    return useMass(baseMass)\n  }\n\n  const self: ScrollBody = {\n    direction,\n    seek,\n    settle,\n    update,\n    useBaseMass,\n    useBaseSpeed,\n    useMass,\n    useSpeed,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Limit } from './limit'\nimport { ScrollBody } from './scrollBody'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  limit: Limit\n  location: Vector1D\n  scrollBody: ScrollBody\n  animation: Animation\n}\n\nexport type ScrollBounds = {\n  constrain: (v: Vector1D) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(params: Params): ScrollBounds {\n  const { limit, location, scrollBody, animation } = params\n  const { min, max } = limit\n  const tolerance = 70\n  const edgeLimit = Limit({\n    min: min - tolerance,\n    max: max + tolerance,\n  })\n\n  let disabled = false\n  let timeout = 0\n\n  function shouldConstrain(target: Vector1D): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(location.get())) return false\n    if (target.get() === min || target.get() === max) return false\n    return true\n  }\n\n  function constrain(target: Vector1D): void {\n    if (!shouldConstrain(target)) return\n    target.set(edgeLimit.constrain(target.get()))\n\n    if (!timeout) {\n      timeout = window.setTimeout(() => {\n        target.set(limit.constrain(target.get()))\n        scrollBody.useSpeed(10).useMass(3)\n        animation.start()\n        timeout = 0\n      }, tolerance)\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBounds = {\n    constrain,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Limit } from './limit'\n\nexport type ScrollContainOption = '' | 'trimSnaps' | 'keepSnaps'\n\ntype Params = {\n  contentSize: number\n  viewSize: number\n  alignment: Alignment\n}\n\nexport type ScrollContain = {\n  measure: (scrollSnaps: number[], trim: boolean) => number[]\n}\n\nexport function ScrollContain(params: Params): ScrollContain {\n  const { alignment, contentSize, viewSize } = params\n  const scrollBounds = Limit({ min: -contentSize + viewSize, max: 0 })\n  const alignedWithinView = [alignment.measure(contentSize)]\n  const contentExceedsView = contentSize > viewSize\n\n  function findDuplicates(scrollSnaps: number[]): Limit {\n    const startSnap = scrollSnaps[0]\n    const endSnap = scrollSnaps[scrollSnaps.length - 1]\n    const min = scrollSnaps.lastIndexOf(startSnap) + 1\n    const max = scrollSnaps.indexOf(endSnap)\n    return Limit({ min, max })\n  }\n\n  function measure(scrollSnaps: number[], trim: boolean): number[] {\n    const containedSnaps = scrollSnaps.map(scrollBounds.constrain)\n    const { min, max } = findDuplicates(containedSnaps)\n\n    if (!contentExceedsView) return alignedWithinView\n    if (!trim) return containedSnaps\n    return containedSnaps.slice(min - 1, max + 1)\n  }\n\n  const self: ScrollContain = {\n    measure,\n  }\n  return self\n}\n","import { Limit } from './limit'\n\ntype Params = {\n  contentSize: number\n  loop: boolean\n}\n\nexport type ScrollLimit = {\n  measure: (scrollSnaps: number[]) => Limit\n}\n\nexport function ScrollLimit(params: Params): ScrollLimit {\n  const { contentSize, loop } = params\n\n  function measure(scrollSnaps: number[]): Limit {\n    const startSnap = scrollSnaps[0]\n    const endSnap = scrollSnaps[scrollSnaps.length - 1]\n    const min = loop ? startSnap - contentSize : endSnap\n    const max = startSnap\n    return Limit({ min, max })\n  }\n\n  const self: ScrollLimit = {\n    measure,\n  }\n  return self\n}\n","import { Limit } from './limit'\nimport { PxToPercent } from './pxToPercent'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  contentSize: number\n  limit: Limit\n  location: Vector1D\n  pxToPercent: PxToPercent\n}\n\nexport type ScrollLooper = {\n  loop: (vectors: Vector1D[], direction: number) => void\n}\n\nexport function ScrollLooper(params: Params): ScrollLooper {\n  const { contentSize, location, limit, pxToPercent } = params\n  const min = limit.min + pxToPercent.measure(0.1)\n  const max = limit.max + pxToPercent.measure(0.1)\n  const { reachedMin, reachedMax } = Limit({ min, max })\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(location.get())\n    if (direction === -1) return reachedMin(location.get())\n    return false\n  }\n\n  function loop(vectors: Vector1D[], direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach(v => v.add(loopDistance))\n  }\n\n  const self: ScrollLooper = {\n    loop,\n  }\n  return self\n}\n","import { Limit } from './limit'\r\n\r\ntype Params = {\r\n  limit: Limit\r\n}\r\n\r\nexport type ScrollProgress = {\r\n  get: (n: number) => number\r\n}\r\n\r\nexport function ScrollProgress(params: Params): ScrollProgress {\r\n  const { max, length: scrollLength } = params.limit\r\n\r\n  function get(n: number): number {\r\n    const currentLocation = n - max\r\n    return currentLocation / -scrollLength\r\n  }\r\n\r\n  const self: ScrollProgress = {\r\n    get,\r\n  }\r\n  return self\r\n}\r\n","import { Alignment } from './alignment'\nimport { Counter } from './counter'\nimport { Limit } from './limit'\n\ntype Params = {\n  snapSizes: number[]\n  alignment: Alignment\n  loop: boolean\n}\n\nexport type ScrollSnap = {\n  measure: (index: number) => number\n}\n\nexport function ScrollSnap(params: Params): ScrollSnap {\n  const { snapSizes, alignment, loop } = params\n  const alignments = snapSizes.map(alignment.measure)\n  const distancesBetween = distancesBetweenScrollSnaps()\n\n  function distancesBetweenScrollSnaps(): number[] {\n    const limit = Limit({ min: 0, max: snapSizes.length - 1 })\n    const counter = Counter({ limit, start: 0, loop })\n\n    return snapSizes.map((size, index) => {\n      const next = counter.set(index + 1).get()\n      return size + alignments[index] - alignments[next]\n    })\n  }\n\n  function measure(index: number): number {\n    const sizes = distancesBetween.slice(0, index)\n    return sizes.reduce((a, s) => a - s, alignments[0])\n  }\n\n  const self: ScrollSnap = {\n    measure,\n  }\n  return self\n}\n","import { Counter } from './counter'\nimport { Limit } from './limit'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  index: Counter\n  loop: boolean\n  scrollSnaps: number[]\n  contentSize: number\n  limit: Limit\n  target: Vector1D\n}\n\nexport type Target = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTarget = {\n  byIndex: (target: number, direction: number) => Target\n  byDistance: (force: number, snap: boolean) => Target\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(params: Params): ScrollTarget {\n  const { loop, limit, scrollSnaps, contentSize } = params\n  const { reachedMax, reachedAny, removeOffset } = limit\n\n  function minDistance(d1: number, d2: number): number {\n    return Math.abs(d1) < Math.abs(d2) ? d1 : d2\n  }\n\n  function findTargetSnap(target: number): Target {\n    const distance = removeOffset(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map(scrollSnap => scrollSnap - distance)\n      .map(diffToSnap => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => Math.abs(d1.diff) - Math.abs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const t1 = target\n    const t2 = target + contentSize\n    const t3 = target - contentSize\n\n    if (!loop) return t1\n    if (!direction) return minDistance(minDistance(t1, t2), t3)\n\n    const shortest = minDistance(t1, direction === 1 ? t2 : t3)\n    return Math.abs(shortest) * direction\n  }\n\n  function findTargetIndex(target: number, index: number): number {\n    const reachedBound = !loop && reachedAny(target)\n    if (!reachedBound) return index\n\n    const { min, max } = params.index\n    return reachedMax(target) ? min : max\n  }\n\n  function byIndex(index: number, direction: number): Target {\n    const diffToSnap = scrollSnaps[index] - params.target.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): Target {\n    const target = params.target.get() + distance\n    const targetSnap = findTargetSnap(target)\n    const index = findTargetIndex(target, targetSnap.index)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnap.distance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTarget = {\n    byDistance,\n    byIndex,\n    shortcut,\n  }\n  return self\n}\n","import { Animation } from './animation'\nimport { Counter } from './counter'\nimport { EventEmitter } from './eventEmitter'\nimport { ScrollTarget, Target } from './scrollTarget'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  animation: Animation\n  target: Vector1D\n  index: Counter\n  indexPrevious: Counter\n  scrollTarget: ScrollTarget\n  events: EventEmitter\n}\n\nexport type ScrollTo = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(params: Params): ScrollTo {\n  const { index: indexCurrent, scrollTarget, animation } = params\n  const { indexPrevious, events, target: targetDistance } = params\n\n  function scrollTo(target: Target): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    if (distanceDiff) {\n      animation.start()\n      targetDistance.add(distanceDiff)\n    }\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      events.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollTo = {\n    distance,\n    index,\n  }\n  return self\n}\n","import { Axis } from './axis'\nimport { arrayKeys } from './utils'\nimport { Direction } from './direction'\nimport { SlidesInView } from './slidesInView'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  direction: Direction\n  scrollSnaps: number[]\n  viewSize: number\n  location: Vector1D\n  slideSizes: number[]\n  contentSize: number\n  slidesInView: SlidesInView\n}\n\ntype LoopPoint = {\n  point: number\n  location: number\n  index: number\n  getTarget: () => number\n}\n\ntype LoopEdge = 'start' | 'end'\n\nexport type SlideLooper = {\n  canLoop: () => boolean\n  clear: (slides: HTMLElement[]) => void\n  loop: (slides: HTMLElement[]) => void\n  loopPoints: LoopPoint[]\n}\n\nexport function SlideLooper(params: Params): SlideLooper {\n  const { axis, location: scrollLocation, slidesInView, direction } = params\n  const { contentSize, viewSize, slideSizes, scrollSnaps } = params\n  const ascItems = arrayKeys(slideSizes)\n  const descItems = arrayKeys(slideSizes).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n  const loopStyle = axis.scroll === 'x' ? 'left' : 'top'\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizes[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findLoopPoints(indexes: number[], edge: LoopEdge): LoopPoint[] {\n    const isStartEdge = edge === 'start'\n    const offset = isStartEdge ? -contentSize : contentSize\n    const slideBounds = slidesInView.findSlideBounds(offset)\n\n    return indexes.map(index => {\n      const initial = isStartEdge ? 0 : -contentSize\n      const altered = isStartEdge ? contentSize : 0\n      const bounds = slideBounds.filter(b => b.index === index)[0]\n      const point = bounds[isStartEdge ? 'end' : 'start']\n      const getTarget = (): number =>\n        scrollLocation.get() > point ? initial : altered\n      return { point, getTarget, index, location: -1 }\n    })\n  }\n\n  function startPoints(): LoopPoint[] {\n    const gap = scrollSnaps[0] - 1\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, 'end')\n  }\n\n  function endPoints(): LoopPoint[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, 'start')\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter(i => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0\n    })\n  }\n\n  function loop(slides: HTMLElement[]): void {\n    loopPoints.forEach(loopPoint => {\n      const { getTarget, location, index } = loopPoint\n      const target = getTarget()\n      if (target !== location) {\n        slides[index].style[loopStyle] = `${direction.applyTo(target)}%`\n        loopPoint.location = target\n      }\n    })\n  }\n\n  function clear(slides: HTMLElement[]): void {\n    loopPoints.forEach(({ index }) => {\n      slides[index].style[loopStyle] = ''\n    })\n  }\n\n  const self: SlideLooper = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints,\n  }\n  return self\n}\n","import { EventStore } from './eventStore'\nimport { ScrollTo } from './scrollTo'\n\ntype Params = {\n  root: HTMLElement\n  scrollTo: ScrollTo\n  slidesToScroll: number\n}\n\nexport type SlideFocus = {\n  addActivationEvents: (slides: HTMLElement[]) => void\n  removeAllEvents: EventStore['removeAll']\n}\n\nexport function SlideFocus(params: Params): SlideFocus {\n  const { scrollTo, slidesToScroll, root } = params\n  const eventStore = EventStore()\n  const removeAllEvents = eventStore.removeAll\n  let lastTabPressTime = 0\n\n  function registerTabPress(event: Event): void {\n    if ((event as KeyboardEvent).keyCode !== 9) return\n    lastTabPressTime = new Date().getTime()\n  }\n\n  function addFocusEvent(slide: HTMLElement, index: number): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n      if (diffTime > 10) return\n\n      root.scrollLeft = 0\n      const selectedIndex = Math.floor(index / slidesToScroll)\n      scrollTo.index(selectedIndex, 0)\n    }\n    eventStore.add(slide, 'focus', focus, true)\n  }\n\n  function addActivationEvents(slides: HTMLElement[]): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addFocusEvent)\n  }\n\n  const self: SlideFocus = {\n    addActivationEvents,\n    removeAllEvents,\n  }\n  return self\n}\n","import { arrayKeys } from './utils'\n\ntype Params = {\n  contentSize: number\n  slideSizes: number[]\n  viewSize: number\n  loop: boolean\n  inViewThreshold: number\n}\n\ntype SlideBound = {\n  start: number\n  end: number\n  index: number\n}\n\nexport type SlidesInView = {\n  check: (location: number) => number[]\n  findSlideBounds: (offset: number, threshold?: number) => SlideBound[]\n}\n\nexport function SlidesInView(params: Params): SlidesInView {\n  const { contentSize, slideSizes, viewSize } = params\n  const { inViewThreshold, loop } = params\n  const threshold = Math.min(Math.max(inViewThreshold, 0.01), 0.99)\n  const scrollSnaps = arrayKeys(slideSizes).map(scrollSnap)\n  const offsets = loop ? [0, contentSize, -contentSize] : [0]\n  const slideBounds = offsets.reduce((a: SlideBound[], loopOffset) => {\n    return a.concat(findSlideBounds(loopOffset, threshold))\n  }, [])\n\n  function scrollSnap(index: number): number {\n    const span = slideSizes.slice(0, index)\n    return span.reduce((a, s) => a - s, 0)\n  }\n\n  function findSlideBounds(offset: number, threshold?: number): SlideBound[] {\n    const thresholds = slideSizes.map(s => s * (threshold || 0))\n    return scrollSnaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + thresholds[index] + offset,\n      end: snap + viewSize - thresholds[index] + offset,\n      index,\n    }))\n  }\n\n  function check(location: number): number[] {\n    return slideBounds.reduce((list: number[], slideBound) => {\n      const { index, start, end } = slideBound\n      const inList = list.indexOf(index) !== -1\n      const inView = start < location && end > location\n      return !inList && inView ? list.concat([index]) : list\n    }, [])\n  }\n\n  const self: SlidesInView = {\n    check,\n    findSlideBounds,\n  }\n  return self\n}\n","import { Axis } from './axis'\nimport { Direction } from './direction'\nimport { roundToDecimals } from './utils'\nimport { Vector1D } from './vector1d'\n\ntype Params = {\n  axis: Axis\n  container: HTMLElement\n  direction: Direction\n}\n\nexport type Translate = {\n  clear: () => void\n  to: (vector: Vector1D) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(params: Params): Translate {\n  const { axis, container, direction } = params\n  const containerStyle = container.style\n  const translate = axis.scroll === 'x' ? x : y\n  const roundToTwoDecimals = roundToDecimals(2)\n\n  let disabled = false\n  let location = 0\n\n  function x(n: number): string {\n    return `translate3d(${n}%,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}%,0px)`\n  }\n\n  function to(v: Vector1D): void {\n    const target = roundToTwoDecimals(v.get())\n    if (disabled || location === target) return\n\n    getComputedStyle(container).transform\n    containerStyle.transform = translate(direction.applyTo(target))\n    location = target\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    containerStyle.transform = ''\n    location = 0\n  }\n\n  const self: Translate = {\n    clear,\n    to,\n    toggleActive,\n  }\n  return self\n}\n","import { Alignment } from './alignment'\nimport { Animation } from './animation'\nimport { Axis } from './axis'\nimport { Counter } from './counter'\nimport { Direction } from './direction'\nimport { DragHandler } from './dragHandler'\nimport { DragTracker } from './dragTracker'\nimport { EventEmitter } from './eventEmitter'\nimport { Limit } from './limit'\nimport { Options } from './options'\nimport { PxToPercent } from './pxToPercent'\nimport { ScrollBody } from './scrollBody'\nimport { ScrollBounds } from './scrollBounds'\nimport { ScrollContain } from './scrollContain'\nimport { ScrollLimit } from './scrollLimit'\nimport { ScrollLooper } from './scrollLooper'\nimport { ScrollProgress } from './scrollProgress'\nimport { ScrollSnap } from './scrollSnap'\nimport { ScrollTarget } from './scrollTarget'\nimport { ScrollTo } from './scrollTo'\nimport { SlideLooper } from './slideLooper'\nimport { SlideFocus } from './slideFocus'\nimport { SlidesInView } from './slidesInView'\nimport { Translate } from './translate'\nimport { arrayKeys, groupArray } from './utils'\nimport { Vector1D } from './vector1d'\n\nexport type Engine = {\n  axis: Axis\n  direction: Direction\n  animation: Animation\n  scrollBounds: ScrollBounds\n  scrollLooper: ScrollLooper\n  scrollProgress: ScrollProgress\n  index: Counter\n  indexPrevious: Counter\n  limit: Limit\n  location: Vector1D\n  options: Options\n  pxToPercent: PxToPercent\n  scrollBody: ScrollBody\n  dragHandler: DragHandler\n  slideFocus: SlideFocus\n  slideLooper: SlideLooper\n  slidesInView: SlidesInView\n  target: Vector1D\n  translate: Translate\n  scrollTo: ScrollTo\n  scrollTarget: ScrollTarget\n  scrollSnaps: number[]\n  slideIndexes: number[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  options: Options,\n  events: EventEmitter,\n): Engine {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    inViewThreshold,\n    loop,\n    speed,\n    dragFree,\n    slidesToScroll,\n    containScroll,\n  } = options\n\n  // Measurements\n  const axis = Axis(scrollAxis)\n  const pxToPercent = PxToPercent(axis.measure(container))\n  const viewSize = pxToPercent.totalPercent\n  const slideSizes = slides.map(axis.measure).map(pxToPercent.measure)\n  const slideIndexes = arrayKeys(slideSizes)\n  const groupedSizes = groupArray(slideSizes, slidesToScroll)\n  const snapSizes = groupedSizes.map(g => g.reduce((a, s) => a + s))\n  const contentSize = slideSizes.reduce((a, s) => a + s, 0)\n  const alignment = Alignment({ align, viewSize })\n  const scrollSnap = ScrollSnap({ snapSizes, alignment, loop })\n  const defaultSnaps = arrayKeys(snapSizes).map(scrollSnap.measure)\n  const contain = ScrollContain({ alignment, contentSize, viewSize })\n  const shouldContain = !loop && containScroll !== ''\n  const trimSnaps = containScroll === 'trimSnaps'\n  const containedSnaps = contain.measure(defaultSnaps, trimSnaps)\n  const scrollSnaps = shouldContain ? containedSnaps : defaultSnaps\n  const scrollLimit = ScrollLimit({ loop, contentSize })\n  const limit = scrollLimit.measure(scrollSnaps)\n  const direction = Direction(contentDirection)\n\n  // Index\n  const indexMax = Math.max(0, scrollSnaps.length - 1)\n  const indexSpan = Limit({ min: 0, max: indexMax })\n  const index = Counter({ limit: indexSpan, start: startIndex, loop })\n  const indexPrevious = index.clone()\n\n  // Draw\n  const update = (): void => {\n    engine.scrollBody.seek(target).update()\n    const settled = engine.scrollBody.settle(target)\n\n    if (!engine.dragHandler.pointerDown()) {\n      if (!loop) engine.scrollBounds.constrain(target)\n      if (settled) {\n        engine.animation.stop()\n        events.emit('settle')\n      }\n    }\n    if (loop) {\n      engine.scrollLooper.loop(loopVectors, engine.scrollBody.direction())\n      engine.slideLooper.loop(slides)\n    }\n\n    if (!settled) events.emit('scroll')\n    engine.translate.to(location)\n    engine.animation.proceed()\n  }\n\n  // Shared\n  const animation = Animation(update)\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const loopVectors = [location, target]\n  const scrollBody = ScrollBody({\n    location,\n    speed,\n    mass: 1,\n  })\n  const scrollTarget = ScrollTarget({\n    contentSize,\n    index,\n    limit,\n    loop,\n    scrollSnaps,\n    target,\n  })\n  const scrollTo = ScrollTo({\n    animation,\n    events,\n    index,\n    indexPrevious,\n    scrollTarget,\n    target,\n  })\n  const slidesInView = SlidesInView({\n    contentSize,\n    inViewThreshold,\n    loop,\n    slideSizes,\n    viewSize,\n  })\n\n  // DragHandler\n  const dragHandler = DragHandler({\n    animation,\n    axis,\n    direction,\n    dragFree,\n    dragTracker: DragTracker({\n      axis,\n      pxToPercent,\n    }),\n    root,\n    events,\n    index,\n    limit,\n    location,\n    loop,\n    scrollBody,\n    scrollTo,\n    scrollTarget,\n    target,\n  })\n\n  // Slider\n  const engine: Engine = {\n    animation,\n    axis,\n    direction,\n    dragHandler,\n    pxToPercent,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    options,\n    scrollBody,\n    scrollBounds: ScrollBounds({\n      animation,\n      limit,\n      location,\n      scrollBody,\n    }),\n    scrollLooper: ScrollLooper({\n      contentSize,\n      limit,\n      location,\n      pxToPercent,\n    }),\n    scrollProgress: ScrollProgress({\n      limit,\n    }),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideFocus: SlideFocus({\n      root,\n      scrollTo,\n      slidesToScroll,\n    }),\n    slideLooper: SlideLooper({\n      axis,\n      contentSize,\n      direction,\n      location,\n      scrollSnaps,\n      slideSizes,\n      slidesInView,\n      viewSize,\n    }),\n    slidesInView,\n    slideIndexes,\n    target,\n    translate: Translate({\n      axis,\n      container,\n      direction,\n    }),\n  }\n  return engine\n}\n","type Callback = (evt: EmblaEvent) => void\ntype Listeners = { [key in EmblaEvent]: Callback[] }\n\nexport type EmblaEvent =\n  | 'init'\n  | 'pointerDown'\n  | 'pointerUp'\n  | 'scroll'\n  | 'select'\n  | 'settle'\n  | 'destroy'\n  | 'reInit'\n  | 'resize'\n\nexport type EventEmitter = {\n  emit: (evt: EmblaEvent) => EventEmitter\n  on: (evt: EmblaEvent, cb: Callback) => EventEmitter\n  off: (evt: EmblaEvent, cb: Callback) => EventEmitter\n}\n\nexport function EventEmitter(): EventEmitter {\n  const listeners: Listeners = {\n    destroy: [],\n    pointerDown: [],\n    pointerUp: [],\n    init: [],\n    reInit: [],\n    resize: [],\n    scroll: [],\n    select: [],\n    settle: [],\n  }\n\n  function emit(evt: EmblaEvent): EventEmitter {\n    listeners[evt].forEach(e => e(evt))\n    return self\n  }\n\n  function on(evt: EmblaEvent, cb: Callback): EventEmitter {\n    listeners[evt] = listeners[evt].concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEvent, cb: Callback): EventEmitter {\n    listeners[evt] = listeners[evt].filter(e => e !== cb)\n    return self\n  }\n\n  const self: EventEmitter = {\n    emit,\n    off,\n    on,\n  }\n  return self\n}\n","import { AlignmentOption } from './alignment'\nimport { AxisOption } from './axis'\nimport { DirectionOption } from './direction'\nimport { ScrollContainOption } from './scrollContain'\n\nexport type Options = {\n  align: AlignmentOption\n  axis: AxisOption\n  containScroll: ScrollContainOption\n  containerSelector: string\n  direction: DirectionOption\n  dragFree: boolean\n  draggable: boolean\n  draggableClass: string\n  draggingClass: string\n  inViewThreshold: number\n  loop: boolean\n  selectedClass: string\n  slidesToScroll: number\n  speed: number\n  startIndex: number\n}\n\nexport const defaultOptions: Options = {\n  align: 'center',\n  axis: 'x',\n  containScroll: '',\n  containerSelector: '*',\n  direction: 'ltr',\n  dragFree: false,\n  draggable: true,\n  draggableClass: 'is-draggable',\n  draggingClass: 'is-dragging',\n  inViewThreshold: 0,\n  loop: false,\n  selectedClass: 'is-selected',\n  slidesToScroll: 1,\n  speed: 10,\n  startIndex: 0,\n}\n\nexport type EmblaOptions = Partial<Options>\n","import { Engine } from './components/engine'\nimport { EventEmitter, EmblaEvent } from './components/eventEmitter'\nimport { EventStore } from './components/eventStore'\nimport { defaultOptions, EmblaOptions } from './components/options'\nimport { addClass, debounce, removeClass } from './components/utils'\n\nexport type EmblaCarousel = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  clickAllowed: () => boolean\n  containerNode: () => HTMLElement\n  dangerouslyGetEngine: () => Engine\n  destroy: () => void\n  off: EventEmitter['off']\n  on: EventEmitter['on']\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptions) => void\n  scrollNext: () => void\n  scrollPrev: () => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: (target?: boolean) => number[]\n  slidesNotInView: (target?: boolean) => number[]\n}\n\nfunction EmblaCarousel(\n  sliderRoot: HTMLElement,\n  userOptions?: EmblaOptions,\n): EmblaCarousel {\n  const events = EventEmitter()\n  const eventStore = EventStore()\n  const debouncedResize = debounce(resize, 500)\n  const reInit = reActivate\n  const { on, off } = events\n\n  let engine: Engine\n  let activated = false\n  let options = Object.assign({}, defaultOptions)\n  let rootElementSize = 0\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  activate(userOptions)\n\n  function storeElements(): void {\n    if (!sliderRoot) throw new Error('Missing root node 😢')\n\n    const selector = options.containerSelector\n    const sliderContainer = sliderRoot.querySelector(selector)\n\n    if (!sliderContainer) throw new Error('Missing container node 😢')\n\n    container = sliderContainer as HTMLElement\n    slides = Array.prototype.slice.call(container.children)\n  }\n\n  function activate(partialOptions?: EmblaOptions): void {\n    storeElements()\n    options = Object.assign(options, partialOptions)\n    engine = Engine(sliderRoot, container, slides, options, events)\n    rootElementSize = engine.axis.measure(sliderRoot)\n    eventStore.add(window, 'resize', debouncedResize)\n    engine.translate.to(engine.location)\n\n    if (options.loop) {\n      if (!engine.slideLooper.canLoop()) {\n        deActivate()\n        return activate({ loop: false })\n      }\n      engine.slideLooper.loop(slides)\n    }\n    if (options.draggable && slides.length) {\n      engine.dragHandler.addActivationEvents()\n      if (options.draggableClass) {\n        addClass(sliderRoot, options.draggableClass)\n      }\n      if (options.draggingClass) {\n        events\n          .on('pointerDown', toggleDraggingClass)\n          .on('pointerUp', toggleDraggingClass)\n      }\n    }\n    if (slides.length) {\n      engine.slideFocus.addActivationEvents(slides)\n    }\n    if (options.selectedClass) {\n      toggleSelectedClass()\n      events\n        .on('select', toggleSelectedClass)\n        .on('pointerUp', toggleSelectedClass)\n    }\n    if (!activated) {\n      setTimeout(() => events.emit('init'), 0)\n      activated = true\n    }\n  }\n\n  function toggleDraggingClass(evt: EmblaEvent): void {\n    const { draggingClass } = options\n    if (evt === 'pointerDown') addClass(sliderRoot, draggingClass)\n    else removeClass(sliderRoot, draggingClass)\n  }\n\n  function toggleSelectedClass(): void {\n    const { selectedClass } = options\n    const inView = slidesInView(true)\n    const notInView = slidesNotInView(true)\n    notInView.forEach(i => removeClass(slides[i], selectedClass))\n    inView.forEach(i => addClass(slides[i], selectedClass))\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.removeAllEvents()\n    engine.slideFocus.removeAllEvents()\n    engine.animation.stop()\n    eventStore.removeAll()\n    engine.translate.clear()\n    engine.slideLooper.clear(slides)\n    removeClass(sliderRoot, options.draggableClass)\n    slides.forEach(s => removeClass(s, options.selectedClass))\n    events.off('select', toggleSelectedClass)\n    events.off('pointerUp', toggleSelectedClass)\n    events.off('pointerDown', toggleDraggingClass)\n    events.off('pointerUp', toggleDraggingClass)\n  }\n\n  function reActivate(partialOptions?: EmblaOptions): void {\n    if (!activated) return\n    const startIndex = selectedScrollSnap()\n    const newOptions = Object.assign({ startIndex }, partialOptions)\n    deActivate()\n    activate(newOptions)\n    events.emit('reInit')\n  }\n\n  function destroy(): void {\n    if (!activated) return\n    deActivate()\n    activated = false\n    events.emit('destroy')\n  }\n\n  function resize(): void {\n    if (!activated) return\n    const newRootElementSize = engine.axis.measure(sliderRoot)\n    if (rootElementSize !== newRootElementSize) reActivate()\n    events.emit('resize')\n  }\n\n  function slidesInView(target?: boolean): number[] {\n    const location = engine[target ? 'target' : 'location'].get()\n    const type = options.loop ? 'removeOffset' : 'constrain'\n    return engine.slidesInView.check(engine.limit[type](location))\n  }\n\n  function slidesNotInView(target?: boolean): number[] {\n    const inView = slidesInView(target)\n    return engine.slideIndexes.filter(i => inView.indexOf(i) === -1)\n  }\n\n  function scrollTo(index: number, direction?: number): void {\n    engine.scrollBody.useBaseMass().useBaseSpeed()\n    if (activated) engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(): void {\n    const next = engine.index.clone().add(1)\n    scrollTo(next.get(), -1)\n  }\n\n  function scrollPrev(): void {\n    const prev = engine.index.clone().add(-1)\n    scrollTo(prev.get(), 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.clone().add(1)\n    return next.get() !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.clone().add(-1)\n    return prev.get() !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnaps.map(engine.scrollProgress.get)\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function clickAllowed(): boolean {\n    return engine.dragHandler.clickAllowed()\n  }\n\n  function dangerouslyGetEngine(): Engine {\n    return engine\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarousel = {\n    canScrollNext,\n    canScrollPrev,\n    clickAllowed,\n    containerNode,\n    dangerouslyGetEngine,\n    destroy,\n    off,\n    on,\n    previousScrollSnap,\n    reInit,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView,\n  }\n  return self\n}\n\nexport default EmblaCarousel\n"],"names":["Alignment","params","viewSize","align","predefined","start","center","end","n","percent","Number","measure","self","Animation","callback","animationFrame","ifAnimating","active","cb","window","requestAnimationFrame","stop","cancelAnimationFrame","proceed","Axis","axis","scroll","cross","node","_a","getBoundingClientRect","width","height","map","value","iStart","iStop","oStart","oStop","mathSign","Math","abs","deltaAbs","valueB","valueA","factorAbs","diff","roundToDecimals","decimalPoints","pow","round","debounce","time","timeout","clearTimeout","setTimeout","groupArray","array","size","groups","i","length","push","slice","arrayKeys","Object","keys","removeClass","className","cl","classList","contains","remove","addClass","add","Counter","limit","loop","min","max","type","withinLimit","counter","get","set","sign","clone","Direction","direction","applyTo","EventStore","listeners","handler","options","addEventListener","removeEventListener","removeAll","filter","Vector1D","vector","readNumber","subtract","multiply","divide","normalize","DragHandler","target","scrollBody","dragFree","animation","scrollTo","root","dragTracker","location","events","scrollAxis","crossAxis","focusNodes","startScroll","startCross","dragStartPoint","activationEvents","interactionEvents","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","dragThreshold","pointerIsDown","preventScroll","preventClick","isMouse","addActivationEvents","undefined","down","up","click","addInteractionEvents","document","move","removeAllEvents","isFocusNode","name","nodeName","indexOf","forceBoost","boost","allowedForce","force","scrollTarget","index","currentLocation","byDistance","targetChanged","seekNext","destination","reachedAny","next","byIndex","distance","evt","button","isMoving","clearPreventClick","isNotFocusNode","preventDefault","pointerDown","useBaseMass","useSpeed","readPoint","emit","cancelable","moveScroll","moveCross","diffScroll","diffCross","pointerMove","reachedLimit","resist","rawForce","pointerUp","speedFactor","clickAllowed","DragTracker","pxToPercent","coords","x","y","startDrag","diffDrag","lastDrag","pointValue","trackInterval","trackLength","trackTime","trackPoints","lastMoveTime","Date","getTime","touches","c","point","nowTime","diffTime","currentPoint","trackPoint","sort","p1","p2","Limit","reachedMin","reachedMax","removeOffset","constrain","PxToPercent","viewInPx","totalPercent","ScrollBody","baseMass","roundToTwoDecimals","velocity","acceleration","attraction","attractionDirection","speed","mass","update","applyForce","v","seek","magnitude","m","settle","diffRounded","hasSettled","useMass","useBaseSpeed","ScrollBounds","tolerance","edgeLimit","disabled","shouldConstrain","toggleActive","ScrollContain","alignment","contentSize","scrollBounds","alignedWithinView","contentExceedsView","findDuplicates","scrollSnaps","startSnap","endSnap","lastIndexOf","trim","containedSnaps","ScrollLimit","ScrollLooper","shouldLoop","vectors","loopDistance","forEach","ScrollProgress","scrollLength","ScrollSnap","snapSizes","alignments","distancesBetween","distancesBetweenScrollSnaps","sizes","reduce","a","s","ScrollTarget","minDistance","d1","d2","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","t1","t2","t3","shortest","findTargetIndex","reachedBound","snap","targetSnap","snapDistance","ScrollTo","indexCurrent","indexPrevious","targetDistance","distanceDiff","indexDiff","targetIndex","SlideLooper","scrollLocation","slidesInView","slideSizes","ascItems","descItems","reverse","loopPoints","startPoints","concat","endPoints","loopStyle","removeSlideSizes","indexes","from","slidesInGap","gap","remainingGap","findLoopPoints","edge","isStartEdge","offset","slideBounds","findSlideBounds","initial","altered","bounds","b","getTarget","canLoop","every","otherIndexes","slides","loopPoint","style","clear","SlideFocus","slidesToScroll","eventStore","lastTabPressTime","registerTabPress","event","keyCode","addFocusEvent","slide","focus","scrollLeft","selectedIndex","floor","SlidesInView","inViewThreshold","threshold","offsets","loopOffset","span","thresholds","check","list","slideBound","inList","inView","Translate","container","containerStyle","translate","to","getComputedStyle","transform","Engine","contentDirection","startIndex","containScroll","slideIndexes","groupedSizes","g","defaultSnaps","contain","shouldContain","trimSnaps","scrollLimit","indexMax","indexSpan","engine","settled","dragHandler","scrollLooper","loopVectors","slideLooper","startLocation","scrollProgress","slideFocus","EventEmitter","destroy","init","reInit","resize","select","e","on","off","defaultOptions","containerSelector","draggable","draggableClass","draggingClass","selectedClass","EmblaCarousel","sliderRoot","userOptions","debouncedResize","reActivate","activated","rootElementSize","activate","storeElements","Error","selector","sliderContainer","querySelector","Array","prototype","call","children","partialOptions","deActivate","toggleDraggingClass","toggleSelectedClass","notInView","slidesNotInView","selectedScrollSnap","newOptions","newRootElementSize","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","scrollSnapList","previousScrollSnap","dangerouslyGetEngine","containerNode","slideNodes"],"mappings":"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"}